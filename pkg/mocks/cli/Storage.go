// Code generated by mockery 2.7.4. DO NOT EDIT.

package mocks

import (
	context "context"

	db "github.com/randaalex/finance_bot/pkg/db"
	mock "github.com/stretchr/testify/mock"
)

// Storage is an autogenerated mock type for the Storage type
type Storage struct {
	mock.Mock
}

// CreateTransactionsLog provides a mock function with given fields: ctx, arg
func (_m *Storage) CreateTransactionsLog(ctx context.Context, arg db.CreateTransactionsLogParams) (db.TransactionsLog, error) {
	ret := _m.Called(ctx, arg)

	var r0 db.TransactionsLog
	if rf, ok := ret.Get(0).(func(context.Context, db.CreateTransactionsLogParams) db.TransactionsLog); ok {
		r0 = rf(ctx, arg)
	} else {
		r0 = ret.Get(0).(db.TransactionsLog)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, db.CreateTransactionsLogParams) error); ok {
		r1 = rf(ctx, arg)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetTransactionsLogByDescription provides a mock function with given fields: ctx, description
func (_m *Storage) GetTransactionsLogByDescription(ctx context.Context, description string) (db.TransactionsLog, error) {
	ret := _m.Called(ctx, description)

	var r0 db.TransactionsLog
	if rf, ok := ret.Get(0).(func(context.Context, string) db.TransactionsLog); ok {
		r0 = rf(ctx, description)
	} else {
		r0 = ret.Get(0).(db.TransactionsLog)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, description)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
