// Code generated by mockery 2.7.4. DO NOT EDIT.

package mocks

import (
	context "context"
	http "net/http"

	firefly "github.com/randaalex/finance_bot/pkg/firefly"

	mock "github.com/stretchr/testify/mock"
)

// SummaryApi is an autogenerated mock type for the SummaryApi type
type SummaryApi struct {
	mock.Mock
}

// GetBasicSummary provides a mock function with given fields: ctx
func (_m *SummaryApi) GetBasicSummary(ctx context.Context) firefly.ApiGetBasicSummaryRequest {
	ret := _m.Called(ctx)

	var r0 firefly.ApiGetBasicSummaryRequest
	if rf, ok := ret.Get(0).(func(context.Context) firefly.ApiGetBasicSummaryRequest); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Get(0).(firefly.ApiGetBasicSummaryRequest)
	}

	return r0
}

// GetBasicSummaryExecute provides a mock function with given fields: r
func (_m *SummaryApi) GetBasicSummaryExecute(r firefly.ApiGetBasicSummaryRequest) ([]firefly.BasicSummaryEntry, *http.Response, error) {
	ret := _m.Called(r)

	var r0 []firefly.BasicSummaryEntry
	if rf, ok := ret.Get(0).(func(firefly.ApiGetBasicSummaryRequest) []firefly.BasicSummaryEntry); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]firefly.BasicSummaryEntry)
		}
	}

	var r1 *http.Response
	if rf, ok := ret.Get(1).(func(firefly.ApiGetBasicSummaryRequest) *http.Response); ok {
		r1 = rf(r)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(firefly.ApiGetBasicSummaryRequest) error); ok {
		r2 = rf(r)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}
