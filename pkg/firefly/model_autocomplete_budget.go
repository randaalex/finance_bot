/*
 * Firefly III API v1.5.2
 *
 * This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2021-05-14T15:49:56+00:00 
 *
 * API version: 1.5.2
 * Contact: james@firefly-iii.org
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package firefly

import (
	"encoding/json"
)

// AutocompleteBudget struct for AutocompleteBudget
type AutocompleteBudget struct {
	Id string `json:"id"`
	// Name of the budget found by an auto-complete search.
	Name string `json:"name"`
}

// NewAutocompleteBudget instantiates a new AutocompleteBudget object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutocompleteBudget(id string, name string) *AutocompleteBudget {
	this := AutocompleteBudget{}
	this.Id = id
	this.Name = name
	return &this
}

// NewAutocompleteBudgetWithDefaults instantiates a new AutocompleteBudget object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutocompleteBudgetWithDefaults() *AutocompleteBudget {
	this := AutocompleteBudget{}
	return &this
}

// GetId returns the Id field value
func (o *AutocompleteBudget) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AutocompleteBudget) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AutocompleteBudget) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *AutocompleteBudget) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AutocompleteBudget) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AutocompleteBudget) SetName(v string) {
	o.Name = v
}

func (o AutocompleteBudget) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableAutocompleteBudget struct {
	value *AutocompleteBudget
	isSet bool
}

func (v NullableAutocompleteBudget) Get() *AutocompleteBudget {
	return v.value
}

func (v *NullableAutocompleteBudget) Set(val *AutocompleteBudget) {
	v.value = val
	v.isSet = true
}

func (v NullableAutocompleteBudget) IsSet() bool {
	return v.isSet
}

func (v *NullableAutocompleteBudget) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutocompleteBudget(val *AutocompleteBudget) *NullableAutocompleteBudget {
	return &NullableAutocompleteBudget{value: val, isSet: true}
}

func (v NullableAutocompleteBudget) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutocompleteBudget) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


