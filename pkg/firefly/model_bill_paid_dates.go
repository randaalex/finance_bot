/*
 * Firefly III API v1.5.2
 *
 * This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2021-05-14T15:49:56+00:00 
 *
 * API version: 1.5.2
 * Contact: james@firefly-iii.org
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package firefly

import (
	"encoding/json"
	"time"
)

// BillPaidDates struct for BillPaidDates
type BillPaidDates struct {
	// Transaction group ID of the paid bill.
	TransactionGroupId *string `json:"transaction_group_id,omitempty"`
	// Transaction journal ID of the paid bill.
	TransactionJournalId *string `json:"transaction_journal_id,omitempty"`
	// Date the bill was paid.
	Date *time.Time `json:"date,omitempty"`
}

// NewBillPaidDates instantiates a new BillPaidDates object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillPaidDates() *BillPaidDates {
	this := BillPaidDates{}
	return &this
}

// NewBillPaidDatesWithDefaults instantiates a new BillPaidDates object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillPaidDatesWithDefaults() *BillPaidDates {
	this := BillPaidDates{}
	return &this
}

// GetTransactionGroupId returns the TransactionGroupId field value if set, zero value otherwise.
func (o *BillPaidDates) GetTransactionGroupId() string {
	if o == nil || o.TransactionGroupId == nil {
		var ret string
		return ret
	}
	return *o.TransactionGroupId
}

// GetTransactionGroupIdOk returns a tuple with the TransactionGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillPaidDates) GetTransactionGroupIdOk() (*string, bool) {
	if o == nil || o.TransactionGroupId == nil {
		return nil, false
	}
	return o.TransactionGroupId, true
}

// HasTransactionGroupId returns a boolean if a field has been set.
func (o *BillPaidDates) HasTransactionGroupId() bool {
	if o != nil && o.TransactionGroupId != nil {
		return true
	}

	return false
}

// SetTransactionGroupId gets a reference to the given string and assigns it to the TransactionGroupId field.
func (o *BillPaidDates) SetTransactionGroupId(v string) {
	o.TransactionGroupId = &v
}

// GetTransactionJournalId returns the TransactionJournalId field value if set, zero value otherwise.
func (o *BillPaidDates) GetTransactionJournalId() string {
	if o == nil || o.TransactionJournalId == nil {
		var ret string
		return ret
	}
	return *o.TransactionJournalId
}

// GetTransactionJournalIdOk returns a tuple with the TransactionJournalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillPaidDates) GetTransactionJournalIdOk() (*string, bool) {
	if o == nil || o.TransactionJournalId == nil {
		return nil, false
	}
	return o.TransactionJournalId, true
}

// HasTransactionJournalId returns a boolean if a field has been set.
func (o *BillPaidDates) HasTransactionJournalId() bool {
	if o != nil && o.TransactionJournalId != nil {
		return true
	}

	return false
}

// SetTransactionJournalId gets a reference to the given string and assigns it to the TransactionJournalId field.
func (o *BillPaidDates) SetTransactionJournalId(v string) {
	o.TransactionJournalId = &v
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *BillPaidDates) GetDate() time.Time {
	if o == nil || o.Date == nil {
		var ret time.Time
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillPaidDates) GetDateOk() (*time.Time, bool) {
	if o == nil || o.Date == nil {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *BillPaidDates) HasDate() bool {
	if o != nil && o.Date != nil {
		return true
	}

	return false
}

// SetDate gets a reference to the given time.Time and assigns it to the Date field.
func (o *BillPaidDates) SetDate(v time.Time) {
	o.Date = &v
}

func (o BillPaidDates) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TransactionGroupId != nil {
		toSerialize["transaction_group_id"] = o.TransactionGroupId
	}
	if o.TransactionJournalId != nil {
		toSerialize["transaction_journal_id"] = o.TransactionJournalId
	}
	if o.Date != nil {
		toSerialize["date"] = o.Date
	}
	return json.Marshal(toSerialize)
}

type NullableBillPaidDates struct {
	value *BillPaidDates
	isSet bool
}

func (v NullableBillPaidDates) Get() *BillPaidDates {
	return v.value
}

func (v *NullableBillPaidDates) Set(val *BillPaidDates) {
	v.value = val
	v.isSet = true
}

func (v NullableBillPaidDates) IsSet() bool {
	return v.isSet
}

func (v *NullableBillPaidDates) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillPaidDates(val *BillPaidDates) *NullableBillPaidDates {
	return &NullableBillPaidDates{value: val, isSet: true}
}

func (v NullableBillPaidDates) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillPaidDates) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


