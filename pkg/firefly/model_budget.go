/*
 * Firefly III API v1.5.2
 *
 * This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2021-05-14T15:49:56+00:00 
 *
 * API version: 1.5.2
 * Contact: james@firefly-iii.org
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package firefly

import (
	"encoding/json"
	"time"
)

// Budget struct for Budget
type Budget struct {
	CreatedAt *time.Time `json:"created_at,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	Name string `json:"name"`
	Active *bool `json:"active,omitempty"`
	Order *int32 `json:"order,omitempty"`
	// The type of auto-budget that Firefly III must create.
	AutoBudgetType NullableString `json:"auto_budget_type,omitempty"`
	// Use either currency_id or currency_code. Defaults to the user's default currency.
	AutoBudgetCurrencyId NullableString `json:"auto_budget_currency_id,omitempty"`
	// Use either currency_id or currency_code. Defaults to the user's default currency.
	AutoBudgetCurrencyCode NullableString `json:"auto_budget_currency_code,omitempty"`
	AutoBudgetAmount NullableString `json:"auto_budget_amount,omitempty"`
	// Period for the auto budget
	AutoBudgetPeriod NullableString `json:"auto_budget_period,omitempty"`
	// Information on how much was spent in this budget. Is only filled in when the start and end date are submitted.
	Spent *[]BudgetSpent `json:"spent,omitempty"`
}

// NewBudget instantiates a new Budget object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBudget(name string) *Budget {
	this := Budget{}
	this.Name = name
	return &this
}

// NewBudgetWithDefaults instantiates a new Budget object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBudgetWithDefaults() *Budget {
	this := Budget{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *Budget) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Budget) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *Budget) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *Budget) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *Budget) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Budget) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *Budget) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *Budget) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetName returns the Name field value
func (o *Budget) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Budget) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Budget) SetName(v string) {
	o.Name = v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *Budget) GetActive() bool {
	if o == nil || o.Active == nil {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Budget) GetActiveOk() (*bool, bool) {
	if o == nil || o.Active == nil {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *Budget) HasActive() bool {
	if o != nil && o.Active != nil {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *Budget) SetActive(v bool) {
	o.Active = &v
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *Budget) GetOrder() int32 {
	if o == nil || o.Order == nil {
		var ret int32
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Budget) GetOrderOk() (*int32, bool) {
	if o == nil || o.Order == nil {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *Budget) HasOrder() bool {
	if o != nil && o.Order != nil {
		return true
	}

	return false
}

// SetOrder gets a reference to the given int32 and assigns it to the Order field.
func (o *Budget) SetOrder(v int32) {
	o.Order = &v
}

// GetAutoBudgetType returns the AutoBudgetType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Budget) GetAutoBudgetType() string {
	if o == nil || o.AutoBudgetType.Get() == nil {
		var ret string
		return ret
	}
	return *o.AutoBudgetType.Get()
}

// GetAutoBudgetTypeOk returns a tuple with the AutoBudgetType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Budget) GetAutoBudgetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AutoBudgetType.Get(), o.AutoBudgetType.IsSet()
}

// HasAutoBudgetType returns a boolean if a field has been set.
func (o *Budget) HasAutoBudgetType() bool {
	if o != nil && o.AutoBudgetType.IsSet() {
		return true
	}

	return false
}

// SetAutoBudgetType gets a reference to the given NullableString and assigns it to the AutoBudgetType field.
func (o *Budget) SetAutoBudgetType(v string) {
	o.AutoBudgetType.Set(&v)
}
// SetAutoBudgetTypeNil sets the value for AutoBudgetType to be an explicit nil
func (o *Budget) SetAutoBudgetTypeNil() {
	o.AutoBudgetType.Set(nil)
}

// UnsetAutoBudgetType ensures that no value is present for AutoBudgetType, not even an explicit nil
func (o *Budget) UnsetAutoBudgetType() {
	o.AutoBudgetType.Unset()
}

// GetAutoBudgetCurrencyId returns the AutoBudgetCurrencyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Budget) GetAutoBudgetCurrencyId() string {
	if o == nil || o.AutoBudgetCurrencyId.Get() == nil {
		var ret string
		return ret
	}
	return *o.AutoBudgetCurrencyId.Get()
}

// GetAutoBudgetCurrencyIdOk returns a tuple with the AutoBudgetCurrencyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Budget) GetAutoBudgetCurrencyIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AutoBudgetCurrencyId.Get(), o.AutoBudgetCurrencyId.IsSet()
}

// HasAutoBudgetCurrencyId returns a boolean if a field has been set.
func (o *Budget) HasAutoBudgetCurrencyId() bool {
	if o != nil && o.AutoBudgetCurrencyId.IsSet() {
		return true
	}

	return false
}

// SetAutoBudgetCurrencyId gets a reference to the given NullableString and assigns it to the AutoBudgetCurrencyId field.
func (o *Budget) SetAutoBudgetCurrencyId(v string) {
	o.AutoBudgetCurrencyId.Set(&v)
}
// SetAutoBudgetCurrencyIdNil sets the value for AutoBudgetCurrencyId to be an explicit nil
func (o *Budget) SetAutoBudgetCurrencyIdNil() {
	o.AutoBudgetCurrencyId.Set(nil)
}

// UnsetAutoBudgetCurrencyId ensures that no value is present for AutoBudgetCurrencyId, not even an explicit nil
func (o *Budget) UnsetAutoBudgetCurrencyId() {
	o.AutoBudgetCurrencyId.Unset()
}

// GetAutoBudgetCurrencyCode returns the AutoBudgetCurrencyCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Budget) GetAutoBudgetCurrencyCode() string {
	if o == nil || o.AutoBudgetCurrencyCode.Get() == nil {
		var ret string
		return ret
	}
	return *o.AutoBudgetCurrencyCode.Get()
}

// GetAutoBudgetCurrencyCodeOk returns a tuple with the AutoBudgetCurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Budget) GetAutoBudgetCurrencyCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AutoBudgetCurrencyCode.Get(), o.AutoBudgetCurrencyCode.IsSet()
}

// HasAutoBudgetCurrencyCode returns a boolean if a field has been set.
func (o *Budget) HasAutoBudgetCurrencyCode() bool {
	if o != nil && o.AutoBudgetCurrencyCode.IsSet() {
		return true
	}

	return false
}

// SetAutoBudgetCurrencyCode gets a reference to the given NullableString and assigns it to the AutoBudgetCurrencyCode field.
func (o *Budget) SetAutoBudgetCurrencyCode(v string) {
	o.AutoBudgetCurrencyCode.Set(&v)
}
// SetAutoBudgetCurrencyCodeNil sets the value for AutoBudgetCurrencyCode to be an explicit nil
func (o *Budget) SetAutoBudgetCurrencyCodeNil() {
	o.AutoBudgetCurrencyCode.Set(nil)
}

// UnsetAutoBudgetCurrencyCode ensures that no value is present for AutoBudgetCurrencyCode, not even an explicit nil
func (o *Budget) UnsetAutoBudgetCurrencyCode() {
	o.AutoBudgetCurrencyCode.Unset()
}

// GetAutoBudgetAmount returns the AutoBudgetAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Budget) GetAutoBudgetAmount() string {
	if o == nil || o.AutoBudgetAmount.Get() == nil {
		var ret string
		return ret
	}
	return *o.AutoBudgetAmount.Get()
}

// GetAutoBudgetAmountOk returns a tuple with the AutoBudgetAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Budget) GetAutoBudgetAmountOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AutoBudgetAmount.Get(), o.AutoBudgetAmount.IsSet()
}

// HasAutoBudgetAmount returns a boolean if a field has been set.
func (o *Budget) HasAutoBudgetAmount() bool {
	if o != nil && o.AutoBudgetAmount.IsSet() {
		return true
	}

	return false
}

// SetAutoBudgetAmount gets a reference to the given NullableString and assigns it to the AutoBudgetAmount field.
func (o *Budget) SetAutoBudgetAmount(v string) {
	o.AutoBudgetAmount.Set(&v)
}
// SetAutoBudgetAmountNil sets the value for AutoBudgetAmount to be an explicit nil
func (o *Budget) SetAutoBudgetAmountNil() {
	o.AutoBudgetAmount.Set(nil)
}

// UnsetAutoBudgetAmount ensures that no value is present for AutoBudgetAmount, not even an explicit nil
func (o *Budget) UnsetAutoBudgetAmount() {
	o.AutoBudgetAmount.Unset()
}

// GetAutoBudgetPeriod returns the AutoBudgetPeriod field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Budget) GetAutoBudgetPeriod() string {
	if o == nil || o.AutoBudgetPeriod.Get() == nil {
		var ret string
		return ret
	}
	return *o.AutoBudgetPeriod.Get()
}

// GetAutoBudgetPeriodOk returns a tuple with the AutoBudgetPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Budget) GetAutoBudgetPeriodOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AutoBudgetPeriod.Get(), o.AutoBudgetPeriod.IsSet()
}

// HasAutoBudgetPeriod returns a boolean if a field has been set.
func (o *Budget) HasAutoBudgetPeriod() bool {
	if o != nil && o.AutoBudgetPeriod.IsSet() {
		return true
	}

	return false
}

// SetAutoBudgetPeriod gets a reference to the given NullableString and assigns it to the AutoBudgetPeriod field.
func (o *Budget) SetAutoBudgetPeriod(v string) {
	o.AutoBudgetPeriod.Set(&v)
}
// SetAutoBudgetPeriodNil sets the value for AutoBudgetPeriod to be an explicit nil
func (o *Budget) SetAutoBudgetPeriodNil() {
	o.AutoBudgetPeriod.Set(nil)
}

// UnsetAutoBudgetPeriod ensures that no value is present for AutoBudgetPeriod, not even an explicit nil
func (o *Budget) UnsetAutoBudgetPeriod() {
	o.AutoBudgetPeriod.Unset()
}

// GetSpent returns the Spent field value if set, zero value otherwise.
func (o *Budget) GetSpent() []BudgetSpent {
	if o == nil || o.Spent == nil {
		var ret []BudgetSpent
		return ret
	}
	return *o.Spent
}

// GetSpentOk returns a tuple with the Spent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Budget) GetSpentOk() (*[]BudgetSpent, bool) {
	if o == nil || o.Spent == nil {
		return nil, false
	}
	return o.Spent, true
}

// HasSpent returns a boolean if a field has been set.
func (o *Budget) HasSpent() bool {
	if o != nil && o.Spent != nil {
		return true
	}

	return false
}

// SetSpent gets a reference to the given []BudgetSpent and assigns it to the Spent field.
func (o *Budget) SetSpent(v []BudgetSpent) {
	o.Spent = &v
}

func (o Budget) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Active != nil {
		toSerialize["active"] = o.Active
	}
	if o.Order != nil {
		toSerialize["order"] = o.Order
	}
	if o.AutoBudgetType.IsSet() {
		toSerialize["auto_budget_type"] = o.AutoBudgetType.Get()
	}
	if o.AutoBudgetCurrencyId.IsSet() {
		toSerialize["auto_budget_currency_id"] = o.AutoBudgetCurrencyId.Get()
	}
	if o.AutoBudgetCurrencyCode.IsSet() {
		toSerialize["auto_budget_currency_code"] = o.AutoBudgetCurrencyCode.Get()
	}
	if o.AutoBudgetAmount.IsSet() {
		toSerialize["auto_budget_amount"] = o.AutoBudgetAmount.Get()
	}
	if o.AutoBudgetPeriod.IsSet() {
		toSerialize["auto_budget_period"] = o.AutoBudgetPeriod.Get()
	}
	if o.Spent != nil {
		toSerialize["spent"] = o.Spent
	}
	return json.Marshal(toSerialize)
}

type NullableBudget struct {
	value *Budget
	isSet bool
}

func (v NullableBudget) Get() *Budget {
	return v.value
}

func (v *NullableBudget) Set(val *Budget) {
	v.value = val
	v.isSet = true
}

func (v NullableBudget) IsSet() bool {
	return v.isSet
}

func (v *NullableBudget) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBudget(val *Budget) *NullableBudget {
	return &NullableBudget{value: val, isSet: true}
}

func (v NullableBudget) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBudget) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


