/*
 * Firefly III API v1.5.2
 *
 * This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2021-05-14T15:49:56+00:00 
 *
 * API version: 1.5.2
 * Contact: james@firefly-iii.org
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package firefly

import (
	"encoding/json"
)

// AutocompleteObjectGroup struct for AutocompleteObjectGroup
type AutocompleteObjectGroup struct {
	Id string `json:"id"`
	// Title of the object group found by an auto-complete search.
	Title string `json:"title"`
	// Title of the object group found by an auto-complete search.
	Name string `json:"name"`
}

// NewAutocompleteObjectGroup instantiates a new AutocompleteObjectGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutocompleteObjectGroup(id string, title string, name string) *AutocompleteObjectGroup {
	this := AutocompleteObjectGroup{}
	this.Id = id
	this.Title = title
	this.Name = name
	return &this
}

// NewAutocompleteObjectGroupWithDefaults instantiates a new AutocompleteObjectGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutocompleteObjectGroupWithDefaults() *AutocompleteObjectGroup {
	this := AutocompleteObjectGroup{}
	return &this
}

// GetId returns the Id field value
func (o *AutocompleteObjectGroup) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AutocompleteObjectGroup) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AutocompleteObjectGroup) SetId(v string) {
	o.Id = v
}

// GetTitle returns the Title field value
func (o *AutocompleteObjectGroup) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *AutocompleteObjectGroup) GetTitleOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *AutocompleteObjectGroup) SetTitle(v string) {
	o.Title = v
}

// GetName returns the Name field value
func (o *AutocompleteObjectGroup) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AutocompleteObjectGroup) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AutocompleteObjectGroup) SetName(v string) {
	o.Name = v
}

func (o AutocompleteObjectGroup) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["title"] = o.Title
	}
	if true {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableAutocompleteObjectGroup struct {
	value *AutocompleteObjectGroup
	isSet bool
}

func (v NullableAutocompleteObjectGroup) Get() *AutocompleteObjectGroup {
	return v.value
}

func (v *NullableAutocompleteObjectGroup) Set(val *AutocompleteObjectGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableAutocompleteObjectGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableAutocompleteObjectGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutocompleteObjectGroup(val *AutocompleteObjectGroup) *NullableAutocompleteObjectGroup {
	return &NullableAutocompleteObjectGroup{value: val, isSet: true}
}

func (v NullableAutocompleteObjectGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutocompleteObjectGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


