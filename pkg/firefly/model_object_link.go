/*
 * Firefly III API
 *
 * This is the official documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. This version of the API is live from version v4.7.9 and onwards. You may use the \"Authorize\" button to try the API below. 
 *
 * API version: 1.4.0
 * Contact: james@firefly-iii.org
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package firefly

import (
	"encoding/json"
)

// ObjectLink struct for ObjectLink
type ObjectLink struct {
	Var0 *ObjectLink0 `json:"0,omitempty"`
	Self *string `json:"self,omitempty"`
}

// NewObjectLink instantiates a new ObjectLink object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjectLink() *ObjectLink {
	this := ObjectLink{}
	return &this
}

// NewObjectLinkWithDefaults instantiates a new ObjectLink object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjectLinkWithDefaults() *ObjectLink {
	this := ObjectLink{}
	return &this
}

// GetVar0 returns the Var0 field value if set, zero value otherwise.
func (o *ObjectLink) GetVar0() ObjectLink0 {
	if o == nil || o.Var0 == nil {
		var ret ObjectLink0
		return ret
	}
	return *o.Var0
}

// GetVar0Ok returns a tuple with the Var0 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectLink) GetVar0Ok() (*ObjectLink0, bool) {
	if o == nil || o.Var0 == nil {
		return nil, false
	}
	return o.Var0, true
}

// HasVar0 returns a boolean if a field has been set.
func (o *ObjectLink) HasVar0() bool {
	if o != nil && o.Var0 != nil {
		return true
	}

	return false
}

// SetVar0 gets a reference to the given ObjectLink0 and assigns it to the Var0 field.
func (o *ObjectLink) SetVar0(v ObjectLink0) {
	o.Var0 = &v
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *ObjectLink) GetSelf() string {
	if o == nil || o.Self == nil {
		var ret string
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectLink) GetSelfOk() (*string, bool) {
	if o == nil || o.Self == nil {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *ObjectLink) HasSelf() bool {
	if o != nil && o.Self != nil {
		return true
	}

	return false
}

// SetSelf gets a reference to the given string and assigns it to the Self field.
func (o *ObjectLink) SetSelf(v string) {
	o.Self = &v
}

func (o ObjectLink) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Var0 != nil {
		toSerialize["0"] = o.Var0
	}
	if o.Self != nil {
		toSerialize["self"] = o.Self
	}
	return json.Marshal(toSerialize)
}

type NullableObjectLink struct {
	value *ObjectLink
	isSet bool
}

func (v NullableObjectLink) Get() *ObjectLink {
	return v.value
}

func (v *NullableObjectLink) Set(val *ObjectLink) {
	v.value = val
	v.isSet = true
}

func (v NullableObjectLink) IsSet() bool {
	return v.isSet
}

func (v *NullableObjectLink) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjectLink(val *ObjectLink) *NullableObjectLink {
	return &NullableObjectLink{value: val, isSet: true}
}

func (v NullableObjectLink) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjectLink) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


