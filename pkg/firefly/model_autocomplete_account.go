/*
 * Firefly III API
 *
 * This is the official documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. This version of the API is live from version v4.7.9 and onwards. You may use the \"Authorize\" button to try the API below. 
 *
 * API version: 1.4.0
 * Contact: james@firefly-iii.org
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package firefly

import (
	"encoding/json"
)

// AutocompleteAccount struct for AutocompleteAccount
type AutocompleteAccount struct {
	Id string `json:"id"`
	// Name of the account found by an auto-complete search.
	Name string `json:"name"`
	// Asset accounts and liabilities have a second field with the given date's account balance.
	NameWithBalance string `json:"name_with_balance"`
	// Account type of the account found by the auto-complete search.
	Type string `json:"type"`
	// Currency ID for this account.
	CurrencyId int32 `json:"currency_id"`
	// Currency code for this account.
	CurrencyCode string `json:"currency_code"`
	CurrencySymbol string `json:"currency_symbol"`
	CurrencyDecimalPlaces int32 `json:"currency_decimal_places"`
}

// NewAutocompleteAccount instantiates a new AutocompleteAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutocompleteAccount(id string, name string, nameWithBalance string, type_ string, currencyId int32, currencyCode string, currencySymbol string, currencyDecimalPlaces int32) *AutocompleteAccount {
	this := AutocompleteAccount{}
	this.Id = id
	this.Name = name
	this.NameWithBalance = nameWithBalance
	this.Type = type_
	this.CurrencyId = currencyId
	this.CurrencyCode = currencyCode
	this.CurrencySymbol = currencySymbol
	this.CurrencyDecimalPlaces = currencyDecimalPlaces
	return &this
}

// NewAutocompleteAccountWithDefaults instantiates a new AutocompleteAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutocompleteAccountWithDefaults() *AutocompleteAccount {
	this := AutocompleteAccount{}
	return &this
}

// GetId returns the Id field value
func (o *AutocompleteAccount) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AutocompleteAccount) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AutocompleteAccount) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *AutocompleteAccount) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AutocompleteAccount) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AutocompleteAccount) SetName(v string) {
	o.Name = v
}

// GetNameWithBalance returns the NameWithBalance field value
func (o *AutocompleteAccount) GetNameWithBalance() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NameWithBalance
}

// GetNameWithBalanceOk returns a tuple with the NameWithBalance field value
// and a boolean to check if the value has been set.
func (o *AutocompleteAccount) GetNameWithBalanceOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.NameWithBalance, true
}

// SetNameWithBalance sets field value
func (o *AutocompleteAccount) SetNameWithBalance(v string) {
	o.NameWithBalance = v
}

// GetType returns the Type field value
func (o *AutocompleteAccount) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *AutocompleteAccount) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *AutocompleteAccount) SetType(v string) {
	o.Type = v
}

// GetCurrencyId returns the CurrencyId field value
func (o *AutocompleteAccount) GetCurrencyId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CurrencyId
}

// GetCurrencyIdOk returns a tuple with the CurrencyId field value
// and a boolean to check if the value has been set.
func (o *AutocompleteAccount) GetCurrencyIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CurrencyId, true
}

// SetCurrencyId sets field value
func (o *AutocompleteAccount) SetCurrencyId(v int32) {
	o.CurrencyId = v
}

// GetCurrencyCode returns the CurrencyCode field value
func (o *AutocompleteAccount) GetCurrencyCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value
// and a boolean to check if the value has been set.
func (o *AutocompleteAccount) GetCurrencyCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CurrencyCode, true
}

// SetCurrencyCode sets field value
func (o *AutocompleteAccount) SetCurrencyCode(v string) {
	o.CurrencyCode = v
}

// GetCurrencySymbol returns the CurrencySymbol field value
func (o *AutocompleteAccount) GetCurrencySymbol() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CurrencySymbol
}

// GetCurrencySymbolOk returns a tuple with the CurrencySymbol field value
// and a boolean to check if the value has been set.
func (o *AutocompleteAccount) GetCurrencySymbolOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CurrencySymbol, true
}

// SetCurrencySymbol sets field value
func (o *AutocompleteAccount) SetCurrencySymbol(v string) {
	o.CurrencySymbol = v
}

// GetCurrencyDecimalPlaces returns the CurrencyDecimalPlaces field value
func (o *AutocompleteAccount) GetCurrencyDecimalPlaces() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CurrencyDecimalPlaces
}

// GetCurrencyDecimalPlacesOk returns a tuple with the CurrencyDecimalPlaces field value
// and a boolean to check if the value has been set.
func (o *AutocompleteAccount) GetCurrencyDecimalPlacesOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CurrencyDecimalPlaces, true
}

// SetCurrencyDecimalPlaces sets field value
func (o *AutocompleteAccount) SetCurrencyDecimalPlaces(v int32) {
	o.CurrencyDecimalPlaces = v
}

func (o AutocompleteAccount) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["name_with_balance"] = o.NameWithBalance
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["currency_id"] = o.CurrencyId
	}
	if true {
		toSerialize["currency_code"] = o.CurrencyCode
	}
	if true {
		toSerialize["currency_symbol"] = o.CurrencySymbol
	}
	if true {
		toSerialize["currency_decimal_places"] = o.CurrencyDecimalPlaces
	}
	return json.Marshal(toSerialize)
}

type NullableAutocompleteAccount struct {
	value *AutocompleteAccount
	isSet bool
}

func (v NullableAutocompleteAccount) Get() *AutocompleteAccount {
	return v.value
}

func (v *NullableAutocompleteAccount) Set(val *AutocompleteAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableAutocompleteAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableAutocompleteAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutocompleteAccount(val *AutocompleteAccount) *NullableAutocompleteAccount {
	return &NullableAutocompleteAccount{value: val, isSet: true}
}

func (v NullableAutocompleteAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutocompleteAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


