/*
 * Firefly III API
 *
 * This is the official documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. This version of the API is live from version v4.7.9 and onwards. You may use the \"Authorize\" button to try the API below. 
 *
 * API version: 1.4.0
 * Contact: james@firefly-iii.org
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package firefly

import (
	"encoding/json"
	"time"
)

// ImportJobAttributes struct for ImportJobAttributes
type ImportJobAttributes struct {
	CreatedAt *time.Time `json:"created_at,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	// ID of the tag related to the import job, if present.
	TagId *int32 `json:"tag_id,omitempty"`
	// Tag related to the import job, if present.
	TagTag *string `json:"tag_tag,omitempty"`
	// Import job unique identifier.
	Key *string `json:"key,omitempty"`
	// File type, if relevant.
	FileType *string `json:"file_type,omitempty"`
	// Import provider that did the import.
	Provider *string `json:"provider,omitempty"`
	// Status of import job.
	Status *string `json:"status,omitempty"`
	// Current stage.
	Stage *string `json:"stage,omitempty"`
	// JSON string with job-specific configuration.
	Configuration *string `json:"configuration,omitempty"`
	// JSON string with job-specific status.
	ExtendedStatus *string `json:"extended_status,omitempty"`
	// JSON string with a count of transactions in the job.
	Transactions *string `json:"transactions,omitempty"`
	// JSON string with a list of errors.
	Errors *string `json:"errors,omitempty"`
}

// NewImportJobAttributes instantiates a new ImportJobAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImportJobAttributes() *ImportJobAttributes {
	this := ImportJobAttributes{}
	return &this
}

// NewImportJobAttributesWithDefaults instantiates a new ImportJobAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImportJobAttributesWithDefaults() *ImportJobAttributes {
	this := ImportJobAttributes{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ImportJobAttributes) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportJobAttributes) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ImportJobAttributes) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *ImportJobAttributes) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ImportJobAttributes) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportJobAttributes) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ImportJobAttributes) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *ImportJobAttributes) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetTagId returns the TagId field value if set, zero value otherwise.
func (o *ImportJobAttributes) GetTagId() int32 {
	if o == nil || o.TagId == nil {
		var ret int32
		return ret
	}
	return *o.TagId
}

// GetTagIdOk returns a tuple with the TagId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportJobAttributes) GetTagIdOk() (*int32, bool) {
	if o == nil || o.TagId == nil {
		return nil, false
	}
	return o.TagId, true
}

// HasTagId returns a boolean if a field has been set.
func (o *ImportJobAttributes) HasTagId() bool {
	if o != nil && o.TagId != nil {
		return true
	}

	return false
}

// SetTagId gets a reference to the given int32 and assigns it to the TagId field.
func (o *ImportJobAttributes) SetTagId(v int32) {
	o.TagId = &v
}

// GetTagTag returns the TagTag field value if set, zero value otherwise.
func (o *ImportJobAttributes) GetTagTag() string {
	if o == nil || o.TagTag == nil {
		var ret string
		return ret
	}
	return *o.TagTag
}

// GetTagTagOk returns a tuple with the TagTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportJobAttributes) GetTagTagOk() (*string, bool) {
	if o == nil || o.TagTag == nil {
		return nil, false
	}
	return o.TagTag, true
}

// HasTagTag returns a boolean if a field has been set.
func (o *ImportJobAttributes) HasTagTag() bool {
	if o != nil && o.TagTag != nil {
		return true
	}

	return false
}

// SetTagTag gets a reference to the given string and assigns it to the TagTag field.
func (o *ImportJobAttributes) SetTagTag(v string) {
	o.TagTag = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *ImportJobAttributes) GetKey() string {
	if o == nil || o.Key == nil {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportJobAttributes) GetKeyOk() (*string, bool) {
	if o == nil || o.Key == nil {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *ImportJobAttributes) HasKey() bool {
	if o != nil && o.Key != nil {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *ImportJobAttributes) SetKey(v string) {
	o.Key = &v
}

// GetFileType returns the FileType field value if set, zero value otherwise.
func (o *ImportJobAttributes) GetFileType() string {
	if o == nil || o.FileType == nil {
		var ret string
		return ret
	}
	return *o.FileType
}

// GetFileTypeOk returns a tuple with the FileType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportJobAttributes) GetFileTypeOk() (*string, bool) {
	if o == nil || o.FileType == nil {
		return nil, false
	}
	return o.FileType, true
}

// HasFileType returns a boolean if a field has been set.
func (o *ImportJobAttributes) HasFileType() bool {
	if o != nil && o.FileType != nil {
		return true
	}

	return false
}

// SetFileType gets a reference to the given string and assigns it to the FileType field.
func (o *ImportJobAttributes) SetFileType(v string) {
	o.FileType = &v
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *ImportJobAttributes) GetProvider() string {
	if o == nil || o.Provider == nil {
		var ret string
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportJobAttributes) GetProviderOk() (*string, bool) {
	if o == nil || o.Provider == nil {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *ImportJobAttributes) HasProvider() bool {
	if o != nil && o.Provider != nil {
		return true
	}

	return false
}

// SetProvider gets a reference to the given string and assigns it to the Provider field.
func (o *ImportJobAttributes) SetProvider(v string) {
	o.Provider = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ImportJobAttributes) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportJobAttributes) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ImportJobAttributes) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ImportJobAttributes) SetStatus(v string) {
	o.Status = &v
}

// GetStage returns the Stage field value if set, zero value otherwise.
func (o *ImportJobAttributes) GetStage() string {
	if o == nil || o.Stage == nil {
		var ret string
		return ret
	}
	return *o.Stage
}

// GetStageOk returns a tuple with the Stage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportJobAttributes) GetStageOk() (*string, bool) {
	if o == nil || o.Stage == nil {
		return nil, false
	}
	return o.Stage, true
}

// HasStage returns a boolean if a field has been set.
func (o *ImportJobAttributes) HasStage() bool {
	if o != nil && o.Stage != nil {
		return true
	}

	return false
}

// SetStage gets a reference to the given string and assigns it to the Stage field.
func (o *ImportJobAttributes) SetStage(v string) {
	o.Stage = &v
}

// GetConfiguration returns the Configuration field value if set, zero value otherwise.
func (o *ImportJobAttributes) GetConfiguration() string {
	if o == nil || o.Configuration == nil {
		var ret string
		return ret
	}
	return *o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportJobAttributes) GetConfigurationOk() (*string, bool) {
	if o == nil || o.Configuration == nil {
		return nil, false
	}
	return o.Configuration, true
}

// HasConfiguration returns a boolean if a field has been set.
func (o *ImportJobAttributes) HasConfiguration() bool {
	if o != nil && o.Configuration != nil {
		return true
	}

	return false
}

// SetConfiguration gets a reference to the given string and assigns it to the Configuration field.
func (o *ImportJobAttributes) SetConfiguration(v string) {
	o.Configuration = &v
}

// GetExtendedStatus returns the ExtendedStatus field value if set, zero value otherwise.
func (o *ImportJobAttributes) GetExtendedStatus() string {
	if o == nil || o.ExtendedStatus == nil {
		var ret string
		return ret
	}
	return *o.ExtendedStatus
}

// GetExtendedStatusOk returns a tuple with the ExtendedStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportJobAttributes) GetExtendedStatusOk() (*string, bool) {
	if o == nil || o.ExtendedStatus == nil {
		return nil, false
	}
	return o.ExtendedStatus, true
}

// HasExtendedStatus returns a boolean if a field has been set.
func (o *ImportJobAttributes) HasExtendedStatus() bool {
	if o != nil && o.ExtendedStatus != nil {
		return true
	}

	return false
}

// SetExtendedStatus gets a reference to the given string and assigns it to the ExtendedStatus field.
func (o *ImportJobAttributes) SetExtendedStatus(v string) {
	o.ExtendedStatus = &v
}

// GetTransactions returns the Transactions field value if set, zero value otherwise.
func (o *ImportJobAttributes) GetTransactions() string {
	if o == nil || o.Transactions == nil {
		var ret string
		return ret
	}
	return *o.Transactions
}

// GetTransactionsOk returns a tuple with the Transactions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportJobAttributes) GetTransactionsOk() (*string, bool) {
	if o == nil || o.Transactions == nil {
		return nil, false
	}
	return o.Transactions, true
}

// HasTransactions returns a boolean if a field has been set.
func (o *ImportJobAttributes) HasTransactions() bool {
	if o != nil && o.Transactions != nil {
		return true
	}

	return false
}

// SetTransactions gets a reference to the given string and assigns it to the Transactions field.
func (o *ImportJobAttributes) SetTransactions(v string) {
	o.Transactions = &v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *ImportJobAttributes) GetErrors() string {
	if o == nil || o.Errors == nil {
		var ret string
		return ret
	}
	return *o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportJobAttributes) GetErrorsOk() (*string, bool) {
	if o == nil || o.Errors == nil {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *ImportJobAttributes) HasErrors() bool {
	if o != nil && o.Errors != nil {
		return true
	}

	return false
}

// SetErrors gets a reference to the given string and assigns it to the Errors field.
func (o *ImportJobAttributes) SetErrors(v string) {
	o.Errors = &v
}

func (o ImportJobAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.TagId != nil {
		toSerialize["tag_id"] = o.TagId
	}
	if o.TagTag != nil {
		toSerialize["tag_tag"] = o.TagTag
	}
	if o.Key != nil {
		toSerialize["key"] = o.Key
	}
	if o.FileType != nil {
		toSerialize["file_type"] = o.FileType
	}
	if o.Provider != nil {
		toSerialize["provider"] = o.Provider
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Stage != nil {
		toSerialize["stage"] = o.Stage
	}
	if o.Configuration != nil {
		toSerialize["configuration"] = o.Configuration
	}
	if o.ExtendedStatus != nil {
		toSerialize["extended_status"] = o.ExtendedStatus
	}
	if o.Transactions != nil {
		toSerialize["transactions"] = o.Transactions
	}
	if o.Errors != nil {
		toSerialize["errors"] = o.Errors
	}
	return json.Marshal(toSerialize)
}

type NullableImportJobAttributes struct {
	value *ImportJobAttributes
	isSet bool
}

func (v NullableImportJobAttributes) Get() *ImportJobAttributes {
	return v.value
}

func (v *NullableImportJobAttributes) Set(val *ImportJobAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableImportJobAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableImportJobAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImportJobAttributes(val *ImportJobAttributes) *NullableImportJobAttributes {
	return &NullableImportJobAttributes{value: val, isSet: true}
}

func (v NullableImportJobAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImportJobAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


