// Code generated by sqlc. DO NOT EDIT.
// source: processed_transactions.sql

package db

import (
	"context"
	"database/sql"
)

const createProcessedTransaction = `-- name: CreateProcessedTransaction :one
INSERT INTO processed_transactions (
  hash,
  firefly_id
) VALUES (
  $1, $2
) RETURNING hash, firefly_id, created_at
`

type CreateProcessedTransactionParams struct {
	Hash      string        `json:"hash"`
	FireflyID sql.NullInt32 `json:"firefly_id"`
}

func (q *Queries) CreateProcessedTransaction(ctx context.Context, arg CreateProcessedTransactionParams) (ProcessedTransaction, error) {
	row := q.queryRow(ctx, q.createProcessedTransactionStmt, createProcessedTransaction, arg.Hash, arg.FireflyID)
	var i ProcessedTransaction
	err := row.Scan(&i.Hash, &i.FireflyID, &i.CreatedAt)
	return i, err
}

const getProcessedTransactionByFireflyID = `-- name: GetProcessedTransactionByFireflyID :one
SELECT hash, firefly_id, created_at FROM processed_transactions
WHERE firefly_id = $1
LIMIT 1
`

func (q *Queries) GetProcessedTransactionByFireflyID(ctx context.Context, fireflyID sql.NullInt32) (ProcessedTransaction, error) {
	row := q.queryRow(ctx, q.getProcessedTransactionByFireflyIDStmt, getProcessedTransactionByFireflyID, fireflyID)
	var i ProcessedTransaction
	err := row.Scan(&i.Hash, &i.FireflyID, &i.CreatedAt)
	return i, err
}

const getProcessedTransactionByHash = `-- name: GetProcessedTransactionByHash :one
SELECT hash, firefly_id, created_at FROM processed_transactions
WHERE hash = $1
LIMIT 1
`

func (q *Queries) GetProcessedTransactionByHash(ctx context.Context, hash string) (ProcessedTransaction, error) {
	row := q.queryRow(ctx, q.getProcessedTransactionByHashStmt, getProcessedTransactionByHash, hash)
	var i ProcessedTransaction
	err := row.Scan(&i.Hash, &i.FireflyID, &i.CreatedAt)
	return i, err
}
