// Code generated by sqlc. DO NOT EDIT.
// source: mappings.sql

package db

import (
	"context"
)

const createMapping = `-- name: CreateMapping :one
INSERT INTO mappings (
  transaction_hash,
  transaction_text,
  category_id
) VALUES (
  $1, $2, $3
) RETURNING id, transaction_hash, transaction_text, category_id, created_at, updated_at
`

type CreateMappingParams struct {
	TransactionHash string `json:"transaction_hash"`
	TransactionText string `json:"transaction_text"`
	CategoryID      int32  `json:"category_id"`
}

func (q *Queries) CreateMapping(ctx context.Context, arg CreateMappingParams) (Mapping, error) {
	row := q.queryRow(ctx, q.createMappingStmt, createMapping, arg.TransactionHash, arg.TransactionText, arg.CategoryID)
	var i Mapping
	err := row.Scan(
		&i.ID,
		&i.TransactionHash,
		&i.TransactionText,
		&i.CategoryID,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const getMappingByTransactionHash = `-- name: GetMappingByTransactionHash :one
SELECT id, transaction_hash, transaction_text, category_id, created_at, updated_at FROM mappings
WHERE transaction_hash = $1
LIMIT 1
`

func (q *Queries) GetMappingByTransactionHash(ctx context.Context, transactionHash string) (Mapping, error) {
	row := q.queryRow(ctx, q.getMappingByTransactionHashStmt, getMappingByTransactionHash, transactionHash)
	var i Mapping
	err := row.Scan(
		&i.ID,
		&i.TransactionHash,
		&i.TransactionText,
		&i.CategoryID,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
